// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: PenawaranPembelian.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace grpcArachne {

  /// <summary>Holder for reflection information generated from PenawaranPembelian.proto</summary>
  public static partial class PenawaranPembelianReflection {

    #region Descriptor
    /// <summary>File descriptor for PenawaranPembelian.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PenawaranPembelianReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChhQZW5hd2FyYW5QZW1iZWxpYW4ucHJvdG8aG2dvb2dsZS9wcm90b2J1Zi9l",
            "bXB0eS5wcm90bxoeZ29vZ2xlL3Byb3RvYnVmL3dyYXBwZXJzLnByb3RvGh9n",
            "b29nbGUvcHJvdG9idWYvdGltZXN0YW1wLnByb3RvIg8KDVRlcm1pblJlcXVl",
            "c3QiUAoOVGVybWluUmVzcG9uc2USEAoISWRUZXJtaW4YASABKAMSLAoGVGVy",
            "bWluGAIgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlIjUKCkxp",
            "c3RUZXJtaW4SJwoOVGVybWluUmVzcG9uc2UYASADKAsyDy5UZXJtaW5SZXNw",
            "b25zZSKdAwoTSW5zZXJ0RGF0YVQ2UmVxdXNldBIcChRJZFBlbmF3YXJhblBl",
            "bWJlbGlhbhgBIAEoAxI1Cg9JZEplbmlzU3VwcGxpZXIYAiABKAsyHC5nb29n",
            "bGUucHJvdG9idWYuU3RyaW5nVmFsdWUSMAoKSWRTdXBwbGllchgDIAEoCzIc",
            "Lmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRISCgpHcmFuZFRvdGFsGAQg",
            "ASgBEhkKEUlkQ29tcGFueVBlbmVyaW1hGAUgASgJEjEKC0Rpc2tvbkRldGls",
            "GAYgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEhUKDURpc2tv",
            "bk5vbWluYWwYByABKAESLgoISWRUZXJtaW4YCCABKAsyHC5nb29nbGUucHJv",
            "dG9idWYuU3RyaW5nVmFsdWUSJwoJVDdSZXF1c2V0GAkgAygLMhQuSW5zZXJ0",
            "RGF0YVQ3UmVxdXNldBItCgdDYXRhdGFuGAogASgLMhwuZ29vZ2xlLnByb3Rv",
            "YnVmLlN0cmluZ1ZhbHVlIvQHChNJbnNlcnREYXRhVDdSZXF1c2V0Ei4KCElk",
            "QmFyYW5nGAEgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEiEK",
            "GUlkRGV0aWxQZW5hd2FyYW5QZW1iZWxpYW4YAiABKAMSLgoISWRTYXR1YW4Y",
            "AyABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSNAoOSWREaXZp",
            "c2lCYXJhbmcYBCABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUS",
            "NwoRSWRTdWJEaXZpc2lCYXJhbmcYBSABKAsyHC5nb29nbGUucHJvdG9idWYu",
            "U3RyaW5nVmFsdWUSNgoQSWRLYXRlZ29yaUJhcmFuZxgGIAEoCzIcLmdvb2ds",
            "ZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRI5ChNJZFN1YkthdGVnb3JpQmFyYW5n",
            "GAcgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEg0KBUhhcmdh",
            "GAggASgBEg4KBkp1bWxhaBgJIAEoARIxCgtEaXNrb25EZXRpbBgKIAEoCzIc",
            "Lmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIVCg1EaXNrb25Ob21pbmFs",
            "GAsgASgBEisKBVRvdGFsGAwgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmlu",
            "Z1ZhbHVlEjYKEENhdGF0YW5QZW5hd2FyYW4YDSABKAsyHC5nb29nbGUucHJv",
            "dG9idWYuU3RyaW5nVmFsdWUSMgoMU2F0dWFuU2F0dWFuGA4gASgLMhwuZ29v",
            "Z2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEjIKDEJhcmFuZ0JhcmFuZxgPIAEo",
            "CzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIyCgxCYXJhbmdVa3Vy",
            "YW4YECABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSEgoKQmFy",
            "YW5nVW11chgRIAEoBRI+ChhTdWJEaXZpc2lCYXJhbmdTdWJEaXZpc2kYEiAB",
            "KAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSQgocU3ViS2F0ZWdv",
            "cmlCYXJhbmdTdWJLYXRlZ29yaRgTIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5T",
            "dHJpbmdWYWx1ZRI4ChJEaXZpc2lCYXJhbmdEaXZpc2kYFCABKAsyHC5nb29n",
            "bGUucHJvdG9idWYuU3RyaW5nVmFsdWUSPAoWS2F0ZWdvcmlCYXJhbmdLYXRl",
            "Z29yaRgVIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZSIWCgVw",
            "ZXNhbhINCgVwZXNhbhgBIAEoCTKEAQoSUGVuYXdhcmFuUGVtYmVsaWFuEkAK",
            "IEluc2VydFBlbmF3YXJhblBlbWJlbGlhblJlcGVhdGVkEhQuSW5zZXJ0RGF0",
            "YVQ2UmVxdXNldBoGLnBlc2FuEiwKDUdldERhdGFUZXJtaW4SDi5UZXJtaW5S",
            "ZXF1ZXN0GgsuTGlzdFRlcm1pbkIOqgILZ3JwY0FyYWNobmViBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::grpcArachne.TerminRequest), global::grpcArachne.TerminRequest.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::grpcArachne.TerminResponse), global::grpcArachne.TerminResponse.Parser, new[]{ "IdTermin", "Termin" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::grpcArachne.ListTermin), global::grpcArachne.ListTermin.Parser, new[]{ "TerminResponse" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::grpcArachne.InsertDataT6Requset), global::grpcArachne.InsertDataT6Requset.Parser, new[]{ "IdPenawaranPembelian", "IdJenisSupplier", "IdSupplier", "GrandTotal", "IdCompanyPenerima", "DiskonDetil", "DiskonNominal", "IdTermin", "T7Requset", "Catatan" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::grpcArachne.InsertDataT7Requset), global::grpcArachne.InsertDataT7Requset.Parser, new[]{ "IdBarang", "IdDetilPenawaranPembelian", "IdSatuan", "IdDivisiBarang", "IdSubDivisiBarang", "IdKategoriBarang", "IdSubKategoriBarang", "Harga", "Jumlah", "DiskonDetil", "DiskonNominal", "Total", "CatatanPenawaran", "SatuanSatuan", "BarangBarang", "BarangUkuran", "BarangUmur", "SubDivisiBarangSubDivisi", "SubKategoriBarangSubKategori", "DivisiBarangDivisi", "KategoriBarangKategori" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::grpcArachne.pesan), global::grpcArachne.pesan.Parser, new[]{ "Pesan" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class TerminRequest : pb::IMessage<TerminRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TerminRequest> _parser = new pb::MessageParser<TerminRequest>(() => new TerminRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TerminRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::grpcArachne.PenawaranPembelianReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TerminRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TerminRequest(TerminRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TerminRequest Clone() {
      return new TerminRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TerminRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TerminRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TerminRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class TerminResponse : pb::IMessage<TerminResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TerminResponse> _parser = new pb::MessageParser<TerminResponse>(() => new TerminResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TerminResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::grpcArachne.PenawaranPembelianReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TerminResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TerminResponse(TerminResponse other) : this() {
      idTermin_ = other.idTermin_;
      Termin = other.Termin;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TerminResponse Clone() {
      return new TerminResponse(this);
    }

    /// <summary>Field number for the "IdTermin" field.</summary>
    public const int IdTerminFieldNumber = 1;
    private long idTermin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long IdTermin {
      get { return idTermin_; }
      set {
        idTermin_ = value;
      }
    }

    /// <summary>Field number for the "Termin" field.</summary>
    public const int TerminFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_termin_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string termin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Termin {
      get { return termin_; }
      set {
        termin_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TerminResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TerminResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IdTermin != other.IdTermin) return false;
      if (Termin != other.Termin) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IdTermin != 0L) hash ^= IdTermin.GetHashCode();
      if (termin_ != null) hash ^= Termin.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (IdTermin != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(IdTermin);
      }
      if (termin_ != null) {
        _single_termin_codec.WriteTagAndValue(output, Termin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (IdTermin != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(IdTermin);
      }
      if (termin_ != null) {
        _single_termin_codec.WriteTagAndValue(ref output, Termin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IdTermin != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(IdTermin);
      }
      if (termin_ != null) {
        size += _single_termin_codec.CalculateSizeWithTag(Termin);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TerminResponse other) {
      if (other == null) {
        return;
      }
      if (other.IdTermin != 0L) {
        IdTermin = other.IdTermin;
      }
      if (other.termin_ != null) {
        if (termin_ == null || other.Termin != "") {
          Termin = other.Termin;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IdTermin = input.ReadInt64();
            break;
          }
          case 18: {
            string value = _single_termin_codec.Read(input);
            if (termin_ == null || value != "") {
              Termin = value;
            }
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            IdTermin = input.ReadInt64();
            break;
          }
          case 18: {
            string value = _single_termin_codec.Read(ref input);
            if (termin_ == null || value != "") {
              Termin = value;
            }
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ListTermin : pb::IMessage<ListTermin>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListTermin> _parser = new pb::MessageParser<ListTermin>(() => new ListTermin());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListTermin> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::grpcArachne.PenawaranPembelianReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListTermin() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListTermin(ListTermin other) : this() {
      terminResponse_ = other.terminResponse_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListTermin Clone() {
      return new ListTermin(this);
    }

    /// <summary>Field number for the "TerminResponse" field.</summary>
    public const int TerminResponseFieldNumber = 1;
    private static readonly pb::FieldCodec<global::grpcArachne.TerminResponse> _repeated_terminResponse_codec
        = pb::FieldCodec.ForMessage(10, global::grpcArachne.TerminResponse.Parser);
    private readonly pbc::RepeatedField<global::grpcArachne.TerminResponse> terminResponse_ = new pbc::RepeatedField<global::grpcArachne.TerminResponse>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::grpcArachne.TerminResponse> TerminResponse {
      get { return terminResponse_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListTermin);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListTermin other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!terminResponse_.Equals(other.terminResponse_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= terminResponse_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      terminResponse_.WriteTo(output, _repeated_terminResponse_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      terminResponse_.WriteTo(ref output, _repeated_terminResponse_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += terminResponse_.CalculateSize(_repeated_terminResponse_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListTermin other) {
      if (other == null) {
        return;
      }
      terminResponse_.Add(other.terminResponse_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            terminResponse_.AddEntriesFrom(input, _repeated_terminResponse_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            terminResponse_.AddEntriesFrom(ref input, _repeated_terminResponse_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class InsertDataT6Requset : pb::IMessage<InsertDataT6Requset>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InsertDataT6Requset> _parser = new pb::MessageParser<InsertDataT6Requset>(() => new InsertDataT6Requset());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InsertDataT6Requset> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::grpcArachne.PenawaranPembelianReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertDataT6Requset() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertDataT6Requset(InsertDataT6Requset other) : this() {
      idPenawaranPembelian_ = other.idPenawaranPembelian_;
      IdJenisSupplier = other.IdJenisSupplier;
      IdSupplier = other.IdSupplier;
      grandTotal_ = other.grandTotal_;
      idCompanyPenerima_ = other.idCompanyPenerima_;
      DiskonDetil = other.DiskonDetil;
      diskonNominal_ = other.diskonNominal_;
      IdTermin = other.IdTermin;
      t7Requset_ = other.t7Requset_.Clone();
      Catatan = other.Catatan;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertDataT6Requset Clone() {
      return new InsertDataT6Requset(this);
    }

    /// <summary>Field number for the "IdPenawaranPembelian" field.</summary>
    public const int IdPenawaranPembelianFieldNumber = 1;
    private long idPenawaranPembelian_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long IdPenawaranPembelian {
      get { return idPenawaranPembelian_; }
      set {
        idPenawaranPembelian_ = value;
      }
    }

    /// <summary>Field number for the "IdJenisSupplier" field.</summary>
    public const int IdJenisSupplierFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_idJenisSupplier_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string idJenisSupplier_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IdJenisSupplier {
      get { return idJenisSupplier_; }
      set {
        idJenisSupplier_ = value;
      }
    }


    /// <summary>Field number for the "IdSupplier" field.</summary>
    public const int IdSupplierFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _single_idSupplier_codec = pb::FieldCodec.ForClassWrapper<string>(26);
    private string idSupplier_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IdSupplier {
      get { return idSupplier_; }
      set {
        idSupplier_ = value;
      }
    }


    /// <summary>Field number for the "GrandTotal" field.</summary>
    public const int GrandTotalFieldNumber = 4;
    private double grandTotal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double GrandTotal {
      get { return grandTotal_; }
      set {
        grandTotal_ = value;
      }
    }

    /// <summary>Field number for the "IdCompanyPenerima" field.</summary>
    public const int IdCompanyPenerimaFieldNumber = 5;
    private string idCompanyPenerima_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IdCompanyPenerima {
      get { return idCompanyPenerima_; }
      set {
        idCompanyPenerima_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "DiskonDetil" field.</summary>
    public const int DiskonDetilFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _single_diskonDetil_codec = pb::FieldCodec.ForClassWrapper<string>(50);
    private string diskonDetil_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DiskonDetil {
      get { return diskonDetil_; }
      set {
        diskonDetil_ = value;
      }
    }


    /// <summary>Field number for the "DiskonNominal" field.</summary>
    public const int DiskonNominalFieldNumber = 7;
    private double diskonNominal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double DiskonNominal {
      get { return diskonNominal_; }
      set {
        diskonNominal_ = value;
      }
    }

    /// <summary>Field number for the "IdTermin" field.</summary>
    public const int IdTerminFieldNumber = 8;
    private static readonly pb::FieldCodec<string> _single_idTermin_codec = pb::FieldCodec.ForClassWrapper<string>(66);
    private string idTermin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IdTermin {
      get { return idTermin_; }
      set {
        idTermin_ = value;
      }
    }


    /// <summary>Field number for the "T7Requset" field.</summary>
    public const int T7RequsetFieldNumber = 9;
    private static readonly pb::FieldCodec<global::grpcArachne.InsertDataT7Requset> _repeated_t7Requset_codec
        = pb::FieldCodec.ForMessage(74, global::grpcArachne.InsertDataT7Requset.Parser);
    private readonly pbc::RepeatedField<global::grpcArachne.InsertDataT7Requset> t7Requset_ = new pbc::RepeatedField<global::grpcArachne.InsertDataT7Requset>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::grpcArachne.InsertDataT7Requset> T7Requset {
      get { return t7Requset_; }
    }

    /// <summary>Field number for the "Catatan" field.</summary>
    public const int CatatanFieldNumber = 10;
    private static readonly pb::FieldCodec<string> _single_catatan_codec = pb::FieldCodec.ForClassWrapper<string>(82);
    private string catatan_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Catatan {
      get { return catatan_; }
      set {
        catatan_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InsertDataT6Requset);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InsertDataT6Requset other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IdPenawaranPembelian != other.IdPenawaranPembelian) return false;
      if (IdJenisSupplier != other.IdJenisSupplier) return false;
      if (IdSupplier != other.IdSupplier) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(GrandTotal, other.GrandTotal)) return false;
      if (IdCompanyPenerima != other.IdCompanyPenerima) return false;
      if (DiskonDetil != other.DiskonDetil) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(DiskonNominal, other.DiskonNominal)) return false;
      if (IdTermin != other.IdTermin) return false;
      if(!t7Requset_.Equals(other.t7Requset_)) return false;
      if (Catatan != other.Catatan) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IdPenawaranPembelian != 0L) hash ^= IdPenawaranPembelian.GetHashCode();
      if (idJenisSupplier_ != null) hash ^= IdJenisSupplier.GetHashCode();
      if (idSupplier_ != null) hash ^= IdSupplier.GetHashCode();
      if (GrandTotal != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(GrandTotal);
      if (IdCompanyPenerima.Length != 0) hash ^= IdCompanyPenerima.GetHashCode();
      if (diskonDetil_ != null) hash ^= DiskonDetil.GetHashCode();
      if (DiskonNominal != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(DiskonNominal);
      if (idTermin_ != null) hash ^= IdTermin.GetHashCode();
      hash ^= t7Requset_.GetHashCode();
      if (catatan_ != null) hash ^= Catatan.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (IdPenawaranPembelian != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(IdPenawaranPembelian);
      }
      if (idJenisSupplier_ != null) {
        _single_idJenisSupplier_codec.WriteTagAndValue(output, IdJenisSupplier);
      }
      if (idSupplier_ != null) {
        _single_idSupplier_codec.WriteTagAndValue(output, IdSupplier);
      }
      if (GrandTotal != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(GrandTotal);
      }
      if (IdCompanyPenerima.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(IdCompanyPenerima);
      }
      if (diskonDetil_ != null) {
        _single_diskonDetil_codec.WriteTagAndValue(output, DiskonDetil);
      }
      if (DiskonNominal != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(DiskonNominal);
      }
      if (idTermin_ != null) {
        _single_idTermin_codec.WriteTagAndValue(output, IdTermin);
      }
      t7Requset_.WriteTo(output, _repeated_t7Requset_codec);
      if (catatan_ != null) {
        _single_catatan_codec.WriteTagAndValue(output, Catatan);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (IdPenawaranPembelian != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(IdPenawaranPembelian);
      }
      if (idJenisSupplier_ != null) {
        _single_idJenisSupplier_codec.WriteTagAndValue(ref output, IdJenisSupplier);
      }
      if (idSupplier_ != null) {
        _single_idSupplier_codec.WriteTagAndValue(ref output, IdSupplier);
      }
      if (GrandTotal != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(GrandTotal);
      }
      if (IdCompanyPenerima.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(IdCompanyPenerima);
      }
      if (diskonDetil_ != null) {
        _single_diskonDetil_codec.WriteTagAndValue(ref output, DiskonDetil);
      }
      if (DiskonNominal != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(DiskonNominal);
      }
      if (idTermin_ != null) {
        _single_idTermin_codec.WriteTagAndValue(ref output, IdTermin);
      }
      t7Requset_.WriteTo(ref output, _repeated_t7Requset_codec);
      if (catatan_ != null) {
        _single_catatan_codec.WriteTagAndValue(ref output, Catatan);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IdPenawaranPembelian != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(IdPenawaranPembelian);
      }
      if (idJenisSupplier_ != null) {
        size += _single_idJenisSupplier_codec.CalculateSizeWithTag(IdJenisSupplier);
      }
      if (idSupplier_ != null) {
        size += _single_idSupplier_codec.CalculateSizeWithTag(IdSupplier);
      }
      if (GrandTotal != 0D) {
        size += 1 + 8;
      }
      if (IdCompanyPenerima.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IdCompanyPenerima);
      }
      if (diskonDetil_ != null) {
        size += _single_diskonDetil_codec.CalculateSizeWithTag(DiskonDetil);
      }
      if (DiskonNominal != 0D) {
        size += 1 + 8;
      }
      if (idTermin_ != null) {
        size += _single_idTermin_codec.CalculateSizeWithTag(IdTermin);
      }
      size += t7Requset_.CalculateSize(_repeated_t7Requset_codec);
      if (catatan_ != null) {
        size += _single_catatan_codec.CalculateSizeWithTag(Catatan);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InsertDataT6Requset other) {
      if (other == null) {
        return;
      }
      if (other.IdPenawaranPembelian != 0L) {
        IdPenawaranPembelian = other.IdPenawaranPembelian;
      }
      if (other.idJenisSupplier_ != null) {
        if (idJenisSupplier_ == null || other.IdJenisSupplier != "") {
          IdJenisSupplier = other.IdJenisSupplier;
        }
      }
      if (other.idSupplier_ != null) {
        if (idSupplier_ == null || other.IdSupplier != "") {
          IdSupplier = other.IdSupplier;
        }
      }
      if (other.GrandTotal != 0D) {
        GrandTotal = other.GrandTotal;
      }
      if (other.IdCompanyPenerima.Length != 0) {
        IdCompanyPenerima = other.IdCompanyPenerima;
      }
      if (other.diskonDetil_ != null) {
        if (diskonDetil_ == null || other.DiskonDetil != "") {
          DiskonDetil = other.DiskonDetil;
        }
      }
      if (other.DiskonNominal != 0D) {
        DiskonNominal = other.DiskonNominal;
      }
      if (other.idTermin_ != null) {
        if (idTermin_ == null || other.IdTermin != "") {
          IdTermin = other.IdTermin;
        }
      }
      t7Requset_.Add(other.t7Requset_);
      if (other.catatan_ != null) {
        if (catatan_ == null || other.Catatan != "") {
          Catatan = other.Catatan;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IdPenawaranPembelian = input.ReadInt64();
            break;
          }
          case 18: {
            string value = _single_idJenisSupplier_codec.Read(input);
            if (idJenisSupplier_ == null || value != "") {
              IdJenisSupplier = value;
            }
            break;
          }
          case 26: {
            string value = _single_idSupplier_codec.Read(input);
            if (idSupplier_ == null || value != "") {
              IdSupplier = value;
            }
            break;
          }
          case 33: {
            GrandTotal = input.ReadDouble();
            break;
          }
          case 42: {
            IdCompanyPenerima = input.ReadString();
            break;
          }
          case 50: {
            string value = _single_diskonDetil_codec.Read(input);
            if (diskonDetil_ == null || value != "") {
              DiskonDetil = value;
            }
            break;
          }
          case 57: {
            DiskonNominal = input.ReadDouble();
            break;
          }
          case 66: {
            string value = _single_idTermin_codec.Read(input);
            if (idTermin_ == null || value != "") {
              IdTermin = value;
            }
            break;
          }
          case 74: {
            t7Requset_.AddEntriesFrom(input, _repeated_t7Requset_codec);
            break;
          }
          case 82: {
            string value = _single_catatan_codec.Read(input);
            if (catatan_ == null || value != "") {
              Catatan = value;
            }
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            IdPenawaranPembelian = input.ReadInt64();
            break;
          }
          case 18: {
            string value = _single_idJenisSupplier_codec.Read(ref input);
            if (idJenisSupplier_ == null || value != "") {
              IdJenisSupplier = value;
            }
            break;
          }
          case 26: {
            string value = _single_idSupplier_codec.Read(ref input);
            if (idSupplier_ == null || value != "") {
              IdSupplier = value;
            }
            break;
          }
          case 33: {
            GrandTotal = input.ReadDouble();
            break;
          }
          case 42: {
            IdCompanyPenerima = input.ReadString();
            break;
          }
          case 50: {
            string value = _single_diskonDetil_codec.Read(ref input);
            if (diskonDetil_ == null || value != "") {
              DiskonDetil = value;
            }
            break;
          }
          case 57: {
            DiskonNominal = input.ReadDouble();
            break;
          }
          case 66: {
            string value = _single_idTermin_codec.Read(ref input);
            if (idTermin_ == null || value != "") {
              IdTermin = value;
            }
            break;
          }
          case 74: {
            t7Requset_.AddEntriesFrom(ref input, _repeated_t7Requset_codec);
            break;
          }
          case 82: {
            string value = _single_catatan_codec.Read(ref input);
            if (catatan_ == null || value != "") {
              Catatan = value;
            }
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class InsertDataT7Requset : pb::IMessage<InsertDataT7Requset>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InsertDataT7Requset> _parser = new pb::MessageParser<InsertDataT7Requset>(() => new InsertDataT7Requset());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InsertDataT7Requset> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::grpcArachne.PenawaranPembelianReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertDataT7Requset() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertDataT7Requset(InsertDataT7Requset other) : this() {
      IdBarang = other.IdBarang;
      idDetilPenawaranPembelian_ = other.idDetilPenawaranPembelian_;
      IdSatuan = other.IdSatuan;
      IdDivisiBarang = other.IdDivisiBarang;
      IdSubDivisiBarang = other.IdSubDivisiBarang;
      IdKategoriBarang = other.IdKategoriBarang;
      IdSubKategoriBarang = other.IdSubKategoriBarang;
      harga_ = other.harga_;
      jumlah_ = other.jumlah_;
      DiskonDetil = other.DiskonDetil;
      diskonNominal_ = other.diskonNominal_;
      Total = other.Total;
      CatatanPenawaran = other.CatatanPenawaran;
      SatuanSatuan = other.SatuanSatuan;
      BarangBarang = other.BarangBarang;
      BarangUkuran = other.BarangUkuran;
      barangUmur_ = other.barangUmur_;
      SubDivisiBarangSubDivisi = other.SubDivisiBarangSubDivisi;
      SubKategoriBarangSubKategori = other.SubKategoriBarangSubKategori;
      DivisiBarangDivisi = other.DivisiBarangDivisi;
      KategoriBarangKategori = other.KategoriBarangKategori;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertDataT7Requset Clone() {
      return new InsertDataT7Requset(this);
    }

    /// <summary>Field number for the "IdBarang" field.</summary>
    public const int IdBarangFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_idBarang_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string idBarang_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IdBarang {
      get { return idBarang_; }
      set {
        idBarang_ = value;
      }
    }


    /// <summary>Field number for the "IdDetilPenawaranPembelian" field.</summary>
    public const int IdDetilPenawaranPembelianFieldNumber = 2;
    private long idDetilPenawaranPembelian_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long IdDetilPenawaranPembelian {
      get { return idDetilPenawaranPembelian_; }
      set {
        idDetilPenawaranPembelian_ = value;
      }
    }

    /// <summary>Field number for the "IdSatuan" field.</summary>
    public const int IdSatuanFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _single_idSatuan_codec = pb::FieldCodec.ForClassWrapper<string>(26);
    private string idSatuan_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IdSatuan {
      get { return idSatuan_; }
      set {
        idSatuan_ = value;
      }
    }


    /// <summary>Field number for the "IdDivisiBarang" field.</summary>
    public const int IdDivisiBarangFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _single_idDivisiBarang_codec = pb::FieldCodec.ForClassWrapper<string>(34);
    private string idDivisiBarang_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IdDivisiBarang {
      get { return idDivisiBarang_; }
      set {
        idDivisiBarang_ = value;
      }
    }


    /// <summary>Field number for the "IdSubDivisiBarang" field.</summary>
    public const int IdSubDivisiBarangFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _single_idSubDivisiBarang_codec = pb::FieldCodec.ForClassWrapper<string>(42);
    private string idSubDivisiBarang_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IdSubDivisiBarang {
      get { return idSubDivisiBarang_; }
      set {
        idSubDivisiBarang_ = value;
      }
    }


    /// <summary>Field number for the "IdKategoriBarang" field.</summary>
    public const int IdKategoriBarangFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _single_idKategoriBarang_codec = pb::FieldCodec.ForClassWrapper<string>(50);
    private string idKategoriBarang_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IdKategoriBarang {
      get { return idKategoriBarang_; }
      set {
        idKategoriBarang_ = value;
      }
    }


    /// <summary>Field number for the "IdSubKategoriBarang" field.</summary>
    public const int IdSubKategoriBarangFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _single_idSubKategoriBarang_codec = pb::FieldCodec.ForClassWrapper<string>(58);
    private string idSubKategoriBarang_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IdSubKategoriBarang {
      get { return idSubKategoriBarang_; }
      set {
        idSubKategoriBarang_ = value;
      }
    }


    /// <summary>Field number for the "Harga" field.</summary>
    public const int HargaFieldNumber = 8;
    private double harga_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Harga {
      get { return harga_; }
      set {
        harga_ = value;
      }
    }

    /// <summary>Field number for the "Jumlah" field.</summary>
    public const int JumlahFieldNumber = 9;
    private double jumlah_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Jumlah {
      get { return jumlah_; }
      set {
        jumlah_ = value;
      }
    }

    /// <summary>Field number for the "DiskonDetil" field.</summary>
    public const int DiskonDetilFieldNumber = 10;
    private static readonly pb::FieldCodec<string> _single_diskonDetil_codec = pb::FieldCodec.ForClassWrapper<string>(82);
    private string diskonDetil_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DiskonDetil {
      get { return diskonDetil_; }
      set {
        diskonDetil_ = value;
      }
    }


    /// <summary>Field number for the "DiskonNominal" field.</summary>
    public const int DiskonNominalFieldNumber = 11;
    private double diskonNominal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double DiskonNominal {
      get { return diskonNominal_; }
      set {
        diskonNominal_ = value;
      }
    }

    /// <summary>Field number for the "Total" field.</summary>
    public const int TotalFieldNumber = 12;
    private static readonly pb::FieldCodec<string> _single_total_codec = pb::FieldCodec.ForClassWrapper<string>(98);
    private string total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }


    /// <summary>Field number for the "CatatanPenawaran" field.</summary>
    public const int CatatanPenawaranFieldNumber = 13;
    private static readonly pb::FieldCodec<string> _single_catatanPenawaran_codec = pb::FieldCodec.ForClassWrapper<string>(106);
    private string catatanPenawaran_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CatatanPenawaran {
      get { return catatanPenawaran_; }
      set {
        catatanPenawaran_ = value;
      }
    }


    /// <summary>Field number for the "SatuanSatuan" field.</summary>
    public const int SatuanSatuanFieldNumber = 14;
    private static readonly pb::FieldCodec<string> _single_satuanSatuan_codec = pb::FieldCodec.ForClassWrapper<string>(114);
    private string satuanSatuan_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SatuanSatuan {
      get { return satuanSatuan_; }
      set {
        satuanSatuan_ = value;
      }
    }


    /// <summary>Field number for the "BarangBarang" field.</summary>
    public const int BarangBarangFieldNumber = 15;
    private static readonly pb::FieldCodec<string> _single_barangBarang_codec = pb::FieldCodec.ForClassWrapper<string>(122);
    private string barangBarang_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BarangBarang {
      get { return barangBarang_; }
      set {
        barangBarang_ = value;
      }
    }


    /// <summary>Field number for the "BarangUkuran" field.</summary>
    public const int BarangUkuranFieldNumber = 16;
    private static readonly pb::FieldCodec<string> _single_barangUkuran_codec = pb::FieldCodec.ForClassWrapper<string>(130);
    private string barangUkuran_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BarangUkuran {
      get { return barangUkuran_; }
      set {
        barangUkuran_ = value;
      }
    }


    /// <summary>Field number for the "BarangUmur" field.</summary>
    public const int BarangUmurFieldNumber = 17;
    private int barangUmur_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BarangUmur {
      get { return barangUmur_; }
      set {
        barangUmur_ = value;
      }
    }

    /// <summary>Field number for the "SubDivisiBarangSubDivisi" field.</summary>
    public const int SubDivisiBarangSubDivisiFieldNumber = 18;
    private static readonly pb::FieldCodec<string> _single_subDivisiBarangSubDivisi_codec = pb::FieldCodec.ForClassWrapper<string>(146);
    private string subDivisiBarangSubDivisi_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SubDivisiBarangSubDivisi {
      get { return subDivisiBarangSubDivisi_; }
      set {
        subDivisiBarangSubDivisi_ = value;
      }
    }


    /// <summary>Field number for the "SubKategoriBarangSubKategori" field.</summary>
    public const int SubKategoriBarangSubKategoriFieldNumber = 19;
    private static readonly pb::FieldCodec<string> _single_subKategoriBarangSubKategori_codec = pb::FieldCodec.ForClassWrapper<string>(154);
    private string subKategoriBarangSubKategori_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SubKategoriBarangSubKategori {
      get { return subKategoriBarangSubKategori_; }
      set {
        subKategoriBarangSubKategori_ = value;
      }
    }


    /// <summary>Field number for the "DivisiBarangDivisi" field.</summary>
    public const int DivisiBarangDivisiFieldNumber = 20;
    private static readonly pb::FieldCodec<string> _single_divisiBarangDivisi_codec = pb::FieldCodec.ForClassWrapper<string>(162);
    private string divisiBarangDivisi_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DivisiBarangDivisi {
      get { return divisiBarangDivisi_; }
      set {
        divisiBarangDivisi_ = value;
      }
    }


    /// <summary>Field number for the "KategoriBarangKategori" field.</summary>
    public const int KategoriBarangKategoriFieldNumber = 21;
    private static readonly pb::FieldCodec<string> _single_kategoriBarangKategori_codec = pb::FieldCodec.ForClassWrapper<string>(170);
    private string kategoriBarangKategori_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string KategoriBarangKategori {
      get { return kategoriBarangKategori_; }
      set {
        kategoriBarangKategori_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InsertDataT7Requset);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InsertDataT7Requset other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IdBarang != other.IdBarang) return false;
      if (IdDetilPenawaranPembelian != other.IdDetilPenawaranPembelian) return false;
      if (IdSatuan != other.IdSatuan) return false;
      if (IdDivisiBarang != other.IdDivisiBarang) return false;
      if (IdSubDivisiBarang != other.IdSubDivisiBarang) return false;
      if (IdKategoriBarang != other.IdKategoriBarang) return false;
      if (IdSubKategoriBarang != other.IdSubKategoriBarang) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Harga, other.Harga)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Jumlah, other.Jumlah)) return false;
      if (DiskonDetil != other.DiskonDetil) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(DiskonNominal, other.DiskonNominal)) return false;
      if (Total != other.Total) return false;
      if (CatatanPenawaran != other.CatatanPenawaran) return false;
      if (SatuanSatuan != other.SatuanSatuan) return false;
      if (BarangBarang != other.BarangBarang) return false;
      if (BarangUkuran != other.BarangUkuran) return false;
      if (BarangUmur != other.BarangUmur) return false;
      if (SubDivisiBarangSubDivisi != other.SubDivisiBarangSubDivisi) return false;
      if (SubKategoriBarangSubKategori != other.SubKategoriBarangSubKategori) return false;
      if (DivisiBarangDivisi != other.DivisiBarangDivisi) return false;
      if (KategoriBarangKategori != other.KategoriBarangKategori) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (idBarang_ != null) hash ^= IdBarang.GetHashCode();
      if (IdDetilPenawaranPembelian != 0L) hash ^= IdDetilPenawaranPembelian.GetHashCode();
      if (idSatuan_ != null) hash ^= IdSatuan.GetHashCode();
      if (idDivisiBarang_ != null) hash ^= IdDivisiBarang.GetHashCode();
      if (idSubDivisiBarang_ != null) hash ^= IdSubDivisiBarang.GetHashCode();
      if (idKategoriBarang_ != null) hash ^= IdKategoriBarang.GetHashCode();
      if (idSubKategoriBarang_ != null) hash ^= IdSubKategoriBarang.GetHashCode();
      if (Harga != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Harga);
      if (Jumlah != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Jumlah);
      if (diskonDetil_ != null) hash ^= DiskonDetil.GetHashCode();
      if (DiskonNominal != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(DiskonNominal);
      if (total_ != null) hash ^= Total.GetHashCode();
      if (catatanPenawaran_ != null) hash ^= CatatanPenawaran.GetHashCode();
      if (satuanSatuan_ != null) hash ^= SatuanSatuan.GetHashCode();
      if (barangBarang_ != null) hash ^= BarangBarang.GetHashCode();
      if (barangUkuran_ != null) hash ^= BarangUkuran.GetHashCode();
      if (BarangUmur != 0) hash ^= BarangUmur.GetHashCode();
      if (subDivisiBarangSubDivisi_ != null) hash ^= SubDivisiBarangSubDivisi.GetHashCode();
      if (subKategoriBarangSubKategori_ != null) hash ^= SubKategoriBarangSubKategori.GetHashCode();
      if (divisiBarangDivisi_ != null) hash ^= DivisiBarangDivisi.GetHashCode();
      if (kategoriBarangKategori_ != null) hash ^= KategoriBarangKategori.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (idBarang_ != null) {
        _single_idBarang_codec.WriteTagAndValue(output, IdBarang);
      }
      if (IdDetilPenawaranPembelian != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(IdDetilPenawaranPembelian);
      }
      if (idSatuan_ != null) {
        _single_idSatuan_codec.WriteTagAndValue(output, IdSatuan);
      }
      if (idDivisiBarang_ != null) {
        _single_idDivisiBarang_codec.WriteTagAndValue(output, IdDivisiBarang);
      }
      if (idSubDivisiBarang_ != null) {
        _single_idSubDivisiBarang_codec.WriteTagAndValue(output, IdSubDivisiBarang);
      }
      if (idKategoriBarang_ != null) {
        _single_idKategoriBarang_codec.WriteTagAndValue(output, IdKategoriBarang);
      }
      if (idSubKategoriBarang_ != null) {
        _single_idSubKategoriBarang_codec.WriteTagAndValue(output, IdSubKategoriBarang);
      }
      if (Harga != 0D) {
        output.WriteRawTag(65);
        output.WriteDouble(Harga);
      }
      if (Jumlah != 0D) {
        output.WriteRawTag(73);
        output.WriteDouble(Jumlah);
      }
      if (diskonDetil_ != null) {
        _single_diskonDetil_codec.WriteTagAndValue(output, DiskonDetil);
      }
      if (DiskonNominal != 0D) {
        output.WriteRawTag(89);
        output.WriteDouble(DiskonNominal);
      }
      if (total_ != null) {
        _single_total_codec.WriteTagAndValue(output, Total);
      }
      if (catatanPenawaran_ != null) {
        _single_catatanPenawaran_codec.WriteTagAndValue(output, CatatanPenawaran);
      }
      if (satuanSatuan_ != null) {
        _single_satuanSatuan_codec.WriteTagAndValue(output, SatuanSatuan);
      }
      if (barangBarang_ != null) {
        _single_barangBarang_codec.WriteTagAndValue(output, BarangBarang);
      }
      if (barangUkuran_ != null) {
        _single_barangUkuran_codec.WriteTagAndValue(output, BarangUkuran);
      }
      if (BarangUmur != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(BarangUmur);
      }
      if (subDivisiBarangSubDivisi_ != null) {
        _single_subDivisiBarangSubDivisi_codec.WriteTagAndValue(output, SubDivisiBarangSubDivisi);
      }
      if (subKategoriBarangSubKategori_ != null) {
        _single_subKategoriBarangSubKategori_codec.WriteTagAndValue(output, SubKategoriBarangSubKategori);
      }
      if (divisiBarangDivisi_ != null) {
        _single_divisiBarangDivisi_codec.WriteTagAndValue(output, DivisiBarangDivisi);
      }
      if (kategoriBarangKategori_ != null) {
        _single_kategoriBarangKategori_codec.WriteTagAndValue(output, KategoriBarangKategori);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (idBarang_ != null) {
        _single_idBarang_codec.WriteTagAndValue(ref output, IdBarang);
      }
      if (IdDetilPenawaranPembelian != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(IdDetilPenawaranPembelian);
      }
      if (idSatuan_ != null) {
        _single_idSatuan_codec.WriteTagAndValue(ref output, IdSatuan);
      }
      if (idDivisiBarang_ != null) {
        _single_idDivisiBarang_codec.WriteTagAndValue(ref output, IdDivisiBarang);
      }
      if (idSubDivisiBarang_ != null) {
        _single_idSubDivisiBarang_codec.WriteTagAndValue(ref output, IdSubDivisiBarang);
      }
      if (idKategoriBarang_ != null) {
        _single_idKategoriBarang_codec.WriteTagAndValue(ref output, IdKategoriBarang);
      }
      if (idSubKategoriBarang_ != null) {
        _single_idSubKategoriBarang_codec.WriteTagAndValue(ref output, IdSubKategoriBarang);
      }
      if (Harga != 0D) {
        output.WriteRawTag(65);
        output.WriteDouble(Harga);
      }
      if (Jumlah != 0D) {
        output.WriteRawTag(73);
        output.WriteDouble(Jumlah);
      }
      if (diskonDetil_ != null) {
        _single_diskonDetil_codec.WriteTagAndValue(ref output, DiskonDetil);
      }
      if (DiskonNominal != 0D) {
        output.WriteRawTag(89);
        output.WriteDouble(DiskonNominal);
      }
      if (total_ != null) {
        _single_total_codec.WriteTagAndValue(ref output, Total);
      }
      if (catatanPenawaran_ != null) {
        _single_catatanPenawaran_codec.WriteTagAndValue(ref output, CatatanPenawaran);
      }
      if (satuanSatuan_ != null) {
        _single_satuanSatuan_codec.WriteTagAndValue(ref output, SatuanSatuan);
      }
      if (barangBarang_ != null) {
        _single_barangBarang_codec.WriteTagAndValue(ref output, BarangBarang);
      }
      if (barangUkuran_ != null) {
        _single_barangUkuran_codec.WriteTagAndValue(ref output, BarangUkuran);
      }
      if (BarangUmur != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(BarangUmur);
      }
      if (subDivisiBarangSubDivisi_ != null) {
        _single_subDivisiBarangSubDivisi_codec.WriteTagAndValue(ref output, SubDivisiBarangSubDivisi);
      }
      if (subKategoriBarangSubKategori_ != null) {
        _single_subKategoriBarangSubKategori_codec.WriteTagAndValue(ref output, SubKategoriBarangSubKategori);
      }
      if (divisiBarangDivisi_ != null) {
        _single_divisiBarangDivisi_codec.WriteTagAndValue(ref output, DivisiBarangDivisi);
      }
      if (kategoriBarangKategori_ != null) {
        _single_kategoriBarangKategori_codec.WriteTagAndValue(ref output, KategoriBarangKategori);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (idBarang_ != null) {
        size += _single_idBarang_codec.CalculateSizeWithTag(IdBarang);
      }
      if (IdDetilPenawaranPembelian != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(IdDetilPenawaranPembelian);
      }
      if (idSatuan_ != null) {
        size += _single_idSatuan_codec.CalculateSizeWithTag(IdSatuan);
      }
      if (idDivisiBarang_ != null) {
        size += _single_idDivisiBarang_codec.CalculateSizeWithTag(IdDivisiBarang);
      }
      if (idSubDivisiBarang_ != null) {
        size += _single_idSubDivisiBarang_codec.CalculateSizeWithTag(IdSubDivisiBarang);
      }
      if (idKategoriBarang_ != null) {
        size += _single_idKategoriBarang_codec.CalculateSizeWithTag(IdKategoriBarang);
      }
      if (idSubKategoriBarang_ != null) {
        size += _single_idSubKategoriBarang_codec.CalculateSizeWithTag(IdSubKategoriBarang);
      }
      if (Harga != 0D) {
        size += 1 + 8;
      }
      if (Jumlah != 0D) {
        size += 1 + 8;
      }
      if (diskonDetil_ != null) {
        size += _single_diskonDetil_codec.CalculateSizeWithTag(DiskonDetil);
      }
      if (DiskonNominal != 0D) {
        size += 1 + 8;
      }
      if (total_ != null) {
        size += _single_total_codec.CalculateSizeWithTag(Total);
      }
      if (catatanPenawaran_ != null) {
        size += _single_catatanPenawaran_codec.CalculateSizeWithTag(CatatanPenawaran);
      }
      if (satuanSatuan_ != null) {
        size += _single_satuanSatuan_codec.CalculateSizeWithTag(SatuanSatuan);
      }
      if (barangBarang_ != null) {
        size += _single_barangBarang_codec.CalculateSizeWithTag(BarangBarang);
      }
      if (barangUkuran_ != null) {
        size += _single_barangUkuran_codec.CalculateSizeWithTag(BarangUkuran);
      }
      if (BarangUmur != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(BarangUmur);
      }
      if (subDivisiBarangSubDivisi_ != null) {
        size += _single_subDivisiBarangSubDivisi_codec.CalculateSizeWithTag(SubDivisiBarangSubDivisi);
      }
      if (subKategoriBarangSubKategori_ != null) {
        size += _single_subKategoriBarangSubKategori_codec.CalculateSizeWithTag(SubKategoriBarangSubKategori);
      }
      if (divisiBarangDivisi_ != null) {
        size += _single_divisiBarangDivisi_codec.CalculateSizeWithTag(DivisiBarangDivisi);
      }
      if (kategoriBarangKategori_ != null) {
        size += _single_kategoriBarangKategori_codec.CalculateSizeWithTag(KategoriBarangKategori);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InsertDataT7Requset other) {
      if (other == null) {
        return;
      }
      if (other.idBarang_ != null) {
        if (idBarang_ == null || other.IdBarang != "") {
          IdBarang = other.IdBarang;
        }
      }
      if (other.IdDetilPenawaranPembelian != 0L) {
        IdDetilPenawaranPembelian = other.IdDetilPenawaranPembelian;
      }
      if (other.idSatuan_ != null) {
        if (idSatuan_ == null || other.IdSatuan != "") {
          IdSatuan = other.IdSatuan;
        }
      }
      if (other.idDivisiBarang_ != null) {
        if (idDivisiBarang_ == null || other.IdDivisiBarang != "") {
          IdDivisiBarang = other.IdDivisiBarang;
        }
      }
      if (other.idSubDivisiBarang_ != null) {
        if (idSubDivisiBarang_ == null || other.IdSubDivisiBarang != "") {
          IdSubDivisiBarang = other.IdSubDivisiBarang;
        }
      }
      if (other.idKategoriBarang_ != null) {
        if (idKategoriBarang_ == null || other.IdKategoriBarang != "") {
          IdKategoriBarang = other.IdKategoriBarang;
        }
      }
      if (other.idSubKategoriBarang_ != null) {
        if (idSubKategoriBarang_ == null || other.IdSubKategoriBarang != "") {
          IdSubKategoriBarang = other.IdSubKategoriBarang;
        }
      }
      if (other.Harga != 0D) {
        Harga = other.Harga;
      }
      if (other.Jumlah != 0D) {
        Jumlah = other.Jumlah;
      }
      if (other.diskonDetil_ != null) {
        if (diskonDetil_ == null || other.DiskonDetil != "") {
          DiskonDetil = other.DiskonDetil;
        }
      }
      if (other.DiskonNominal != 0D) {
        DiskonNominal = other.DiskonNominal;
      }
      if (other.total_ != null) {
        if (total_ == null || other.Total != "") {
          Total = other.Total;
        }
      }
      if (other.catatanPenawaran_ != null) {
        if (catatanPenawaran_ == null || other.CatatanPenawaran != "") {
          CatatanPenawaran = other.CatatanPenawaran;
        }
      }
      if (other.satuanSatuan_ != null) {
        if (satuanSatuan_ == null || other.SatuanSatuan != "") {
          SatuanSatuan = other.SatuanSatuan;
        }
      }
      if (other.barangBarang_ != null) {
        if (barangBarang_ == null || other.BarangBarang != "") {
          BarangBarang = other.BarangBarang;
        }
      }
      if (other.barangUkuran_ != null) {
        if (barangUkuran_ == null || other.BarangUkuran != "") {
          BarangUkuran = other.BarangUkuran;
        }
      }
      if (other.BarangUmur != 0) {
        BarangUmur = other.BarangUmur;
      }
      if (other.subDivisiBarangSubDivisi_ != null) {
        if (subDivisiBarangSubDivisi_ == null || other.SubDivisiBarangSubDivisi != "") {
          SubDivisiBarangSubDivisi = other.SubDivisiBarangSubDivisi;
        }
      }
      if (other.subKategoriBarangSubKategori_ != null) {
        if (subKategoriBarangSubKategori_ == null || other.SubKategoriBarangSubKategori != "") {
          SubKategoriBarangSubKategori = other.SubKategoriBarangSubKategori;
        }
      }
      if (other.divisiBarangDivisi_ != null) {
        if (divisiBarangDivisi_ == null || other.DivisiBarangDivisi != "") {
          DivisiBarangDivisi = other.DivisiBarangDivisi;
        }
      }
      if (other.kategoriBarangKategori_ != null) {
        if (kategoriBarangKategori_ == null || other.KategoriBarangKategori != "") {
          KategoriBarangKategori = other.KategoriBarangKategori;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_idBarang_codec.Read(input);
            if (idBarang_ == null || value != "") {
              IdBarang = value;
            }
            break;
          }
          case 16: {
            IdDetilPenawaranPembelian = input.ReadInt64();
            break;
          }
          case 26: {
            string value = _single_idSatuan_codec.Read(input);
            if (idSatuan_ == null || value != "") {
              IdSatuan = value;
            }
            break;
          }
          case 34: {
            string value = _single_idDivisiBarang_codec.Read(input);
            if (idDivisiBarang_ == null || value != "") {
              IdDivisiBarang = value;
            }
            break;
          }
          case 42: {
            string value = _single_idSubDivisiBarang_codec.Read(input);
            if (idSubDivisiBarang_ == null || value != "") {
              IdSubDivisiBarang = value;
            }
            break;
          }
          case 50: {
            string value = _single_idKategoriBarang_codec.Read(input);
            if (idKategoriBarang_ == null || value != "") {
              IdKategoriBarang = value;
            }
            break;
          }
          case 58: {
            string value = _single_idSubKategoriBarang_codec.Read(input);
            if (idSubKategoriBarang_ == null || value != "") {
              IdSubKategoriBarang = value;
            }
            break;
          }
          case 65: {
            Harga = input.ReadDouble();
            break;
          }
          case 73: {
            Jumlah = input.ReadDouble();
            break;
          }
          case 82: {
            string value = _single_diskonDetil_codec.Read(input);
            if (diskonDetil_ == null || value != "") {
              DiskonDetil = value;
            }
            break;
          }
          case 89: {
            DiskonNominal = input.ReadDouble();
            break;
          }
          case 98: {
            string value = _single_total_codec.Read(input);
            if (total_ == null || value != "") {
              Total = value;
            }
            break;
          }
          case 106: {
            string value = _single_catatanPenawaran_codec.Read(input);
            if (catatanPenawaran_ == null || value != "") {
              CatatanPenawaran = value;
            }
            break;
          }
          case 114: {
            string value = _single_satuanSatuan_codec.Read(input);
            if (satuanSatuan_ == null || value != "") {
              SatuanSatuan = value;
            }
            break;
          }
          case 122: {
            string value = _single_barangBarang_codec.Read(input);
            if (barangBarang_ == null || value != "") {
              BarangBarang = value;
            }
            break;
          }
          case 130: {
            string value = _single_barangUkuran_codec.Read(input);
            if (barangUkuran_ == null || value != "") {
              BarangUkuran = value;
            }
            break;
          }
          case 136: {
            BarangUmur = input.ReadInt32();
            break;
          }
          case 146: {
            string value = _single_subDivisiBarangSubDivisi_codec.Read(input);
            if (subDivisiBarangSubDivisi_ == null || value != "") {
              SubDivisiBarangSubDivisi = value;
            }
            break;
          }
          case 154: {
            string value = _single_subKategoriBarangSubKategori_codec.Read(input);
            if (subKategoriBarangSubKategori_ == null || value != "") {
              SubKategoriBarangSubKategori = value;
            }
            break;
          }
          case 162: {
            string value = _single_divisiBarangDivisi_codec.Read(input);
            if (divisiBarangDivisi_ == null || value != "") {
              DivisiBarangDivisi = value;
            }
            break;
          }
          case 170: {
            string value = _single_kategoriBarangKategori_codec.Read(input);
            if (kategoriBarangKategori_ == null || value != "") {
              KategoriBarangKategori = value;
            }
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            string value = _single_idBarang_codec.Read(ref input);
            if (idBarang_ == null || value != "") {
              IdBarang = value;
            }
            break;
          }
          case 16: {
            IdDetilPenawaranPembelian = input.ReadInt64();
            break;
          }
          case 26: {
            string value = _single_idSatuan_codec.Read(ref input);
            if (idSatuan_ == null || value != "") {
              IdSatuan = value;
            }
            break;
          }
          case 34: {
            string value = _single_idDivisiBarang_codec.Read(ref input);
            if (idDivisiBarang_ == null || value != "") {
              IdDivisiBarang = value;
            }
            break;
          }
          case 42: {
            string value = _single_idSubDivisiBarang_codec.Read(ref input);
            if (idSubDivisiBarang_ == null || value != "") {
              IdSubDivisiBarang = value;
            }
            break;
          }
          case 50: {
            string value = _single_idKategoriBarang_codec.Read(ref input);
            if (idKategoriBarang_ == null || value != "") {
              IdKategoriBarang = value;
            }
            break;
          }
          case 58: {
            string value = _single_idSubKategoriBarang_codec.Read(ref input);
            if (idSubKategoriBarang_ == null || value != "") {
              IdSubKategoriBarang = value;
            }
            break;
          }
          case 65: {
            Harga = input.ReadDouble();
            break;
          }
          case 73: {
            Jumlah = input.ReadDouble();
            break;
          }
          case 82: {
            string value = _single_diskonDetil_codec.Read(ref input);
            if (diskonDetil_ == null || value != "") {
              DiskonDetil = value;
            }
            break;
          }
          case 89: {
            DiskonNominal = input.ReadDouble();
            break;
          }
          case 98: {
            string value = _single_total_codec.Read(ref input);
            if (total_ == null || value != "") {
              Total = value;
            }
            break;
          }
          case 106: {
            string value = _single_catatanPenawaran_codec.Read(ref input);
            if (catatanPenawaran_ == null || value != "") {
              CatatanPenawaran = value;
            }
            break;
          }
          case 114: {
            string value = _single_satuanSatuan_codec.Read(ref input);
            if (satuanSatuan_ == null || value != "") {
              SatuanSatuan = value;
            }
            break;
          }
          case 122: {
            string value = _single_barangBarang_codec.Read(ref input);
            if (barangBarang_ == null || value != "") {
              BarangBarang = value;
            }
            break;
          }
          case 130: {
            string value = _single_barangUkuran_codec.Read(ref input);
            if (barangUkuran_ == null || value != "") {
              BarangUkuran = value;
            }
            break;
          }
          case 136: {
            BarangUmur = input.ReadInt32();
            break;
          }
          case 146: {
            string value = _single_subDivisiBarangSubDivisi_codec.Read(ref input);
            if (subDivisiBarangSubDivisi_ == null || value != "") {
              SubDivisiBarangSubDivisi = value;
            }
            break;
          }
          case 154: {
            string value = _single_subKategoriBarangSubKategori_codec.Read(ref input);
            if (subKategoriBarangSubKategori_ == null || value != "") {
              SubKategoriBarangSubKategori = value;
            }
            break;
          }
          case 162: {
            string value = _single_divisiBarangDivisi_codec.Read(ref input);
            if (divisiBarangDivisi_ == null || value != "") {
              DivisiBarangDivisi = value;
            }
            break;
          }
          case 170: {
            string value = _single_kategoriBarangKategori_codec.Read(ref input);
            if (kategoriBarangKategori_ == null || value != "") {
              KategoriBarangKategori = value;
            }
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class pesan : pb::IMessage<pesan>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<pesan> _parser = new pb::MessageParser<pesan>(() => new pesan());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<pesan> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::grpcArachne.PenawaranPembelianReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pesan() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pesan(pesan other) : this() {
      pesan_ = other.pesan_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pesan Clone() {
      return new pesan(this);
    }

    /// <summary>Field number for the "pesan" field.</summary>
    public const int PesanFieldNumber = 1;
    private string pesan_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Pesan {
      get { return pesan_; }
      set {
        pesan_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as pesan);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(pesan other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Pesan != other.Pesan) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Pesan.Length != 0) hash ^= Pesan.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Pesan.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Pesan);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Pesan.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Pesan);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Pesan.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Pesan);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pesan other) {
      if (other == null) {
        return;
      }
      if (other.Pesan.Length != 0) {
        Pesan = other.Pesan;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Pesan = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Pesan = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
