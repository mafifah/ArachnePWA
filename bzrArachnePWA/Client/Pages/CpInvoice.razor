@page "/invoicePenawaran"
@using Microsoft.AspNetCore.SignalR.Client
@using bzrArachnePWA.Client.Models
@using bzrArachnePWA.Client.Service
@inject DataService DataService
@inject PenawaranService PenawaranService
@inject NavigationManager NavigationManager
@inject IToastService toastService
@inject IJSRuntime _IJSRuntime

@inject ISnackbar Snackbar
@using System.Globalization
<h3>Invoice Penawaran</h3>
<MudTable Items="@_dataPenawaran" Hover="true" Breakpoint="Breakpoint.Sm">
    <HeaderContent>
        <MudTh></MudTh>
        <MudTh>Status</MudTh>
        <MudTh>No. PO</MudTh>
        <MudTh>Grand Total</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd>
            <MudButton Variant="Variant.Outlined" Size="Size.Small" OnClick="@(() => ShowBtnPress(context.IdPenawaranPembelian))">@((context.ShowDetails == true)? "Hide" : "Show") Detail Penawaran</MudButton>
            <MudButton Variant="Variant.Outlined" Size="Size.Small" OnClick="(() => Print(context.IdPenawaranPembelian))">Print</MudButton>
        </MudTd>
        <MudTd DataLabel="Status">@context.Status</MudTd>
        <MudTd DataLabel="No. PO">@context.IdPenawaranPembelian</MudTd>
        @{ CultureInfo culture = new CultureInfo("id-ID");
            var CrGrandTotal = context.GrandTotal.ToString("C2", culture);}
        <MudTd DataLabel="Grand Total">@CrGrandTotal</MudTd>
    </RowTemplate>
    <ChildRowContent>
        @if (context.ShowDetails)
        {
            <MudTr>
                <td colspan="4">
                    <MudCard Elevation="0">
                        <MudCardHeader>
                            <CardHeaderContent>
                                <MudText Typo="Typo.body1">Detail Penawaran <strong>No. PO: @context.IdPenawaranPembelian</strong></MudText>
                            </CardHeaderContent>
                        </MudCardHeader>
                        <MudCardContent Class="pa-0">
                            <MudTable Items="@context.BarangPenawaran" Context="BarangPenawaranContext" Hover="true" Breakpoint="Breakpoint.Sm" Elevation="0">
                                <HeaderContent>
                                    <MudTh>Catatan</MudTh>
                                    <MudTh>Jml</MudTh>
                                    <MudTh>Satuan</MudTh>
                                    <MudTh>Nama</MudTh>
                                    <MudTh>Harga</MudTh>
                                    <MudTh>Diskon(%)</MudTh>
                                    <MudTh>Diskon(Rp)</MudTh>
                                    <MudTh>Total</MudTh>
                                </HeaderContent>
                                <RowTemplate>
                                    <MudTd DataLabel="Catatan">@BarangPenawaranContext.CatatanPenawaran</MudTd>
                                    <MudTd DataLabel="Jml">@BarangPenawaranContext.Jumlah</MudTd>
                                    <MudTd DataLabel="Satuan">@BarangPenawaranContext.Satuan</MudTd>
                                    <MudTd DataLabel="Nama">@BarangPenawaranContext.Nama</MudTd>
                                    @{ CultureInfo culture = new CultureInfo("id-ID");
                                            var CrHarga = BarangPenawaranContext.Harga.ToString("C2", culture);
                                            var CrTotal = BarangPenawaranContext.Total.ToString("C2", culture);
                                            var CrNominalDiskon = BarangPenawaranContext.DiskonNominal.ToString("C2", culture);}
                                    <MudTd DataLabel="Harga">@CrHarga</MudTd>
                                    <MudTd DataLabel="Diskon(%)">@BarangPenawaranContext.DiskonDetil</MudTd>
                                    <MudTd DataLabel="Diskon(Rp)">@CrNominalDiskon</MudTd>
                                    <MudTd DataLabel="Total">@CrTotal</MudTd>
                                </RowTemplate>
                            </MudTable>
                        </MudCardContent>
                    </MudCard>
                </td>
            </MudTr>
            @*<MudTr>
                <td align="left" colspan="4" style="padding-left:2%;">
                    <MudButton Class="align-content-end" Variant="Variant.Outlined" Size="Size.Small" OnClick="(() => Print())">Print</MudButton>
                </td>
            </MudTr>*@
        }
    </ChildRowContent>
</MudTable>
@{ var no = 1;
    if (_idPenawaran != 0)
    {
        DataPenawaran item = _dataPenawaran.Where(x => x.IdPenawaranPembelian == _idPenawaran).FirstOrDefault();
        <div id="myFaktur" hidden style="display:none;">
            <p style="padding-left: 25px">PT. EXPLOITASI PERINDUSTRIAN GAWEREDJO</p>
            <p style="padding-left: 25px">Jl. Raya Bogangin No. 6</p>
            <p style="padding-left: 25px">Surabaya</p>
            <p style="padding-left: 25px">Telp   : 9908878789798u9</p>
            <p style="padding-left: 25px">Email  : e.p.gaweredjo@gmail.com</p>
            <p style="padding-left: 25px">HP     : 087.852923028</p>
            <br />
            <br />
            <p style="padding-left: 25px">Kepada Yth :</p>
            <p style="padding-left: 25px">@user.Nama</p>
            <p style="padding-left: 25px">Attn Ibu Ratna</p>
            <br />
            <br />
            <h5 style="text-align:center;">NO. PO : @item.IdPenawaranPembelian</h5>
            <table style=" font-family: arial, sans-serif; border-collapse: collapse; width: 100%; padding-left:75px;">
                <thead style="padding-left:75px">
                    <tr style="padding-left:75px">
                        <th style=" border: 1px solid #dddddd; text-align: left; padding: 8px;">No</th>
                        <th style=" border: 1px solid #dddddd; text-align: left; padding: 8px;">Nama</th>
                        <th style=" border: 1px solid #dddddd; text-align: left; padding: 8px;">Quantity</th>
                        <th style=" border: 1px solid #dddddd; text-align: left; padding: 8px;">Satuan</th>
                        <th style=" border: 1px solid #dddddd; text-align: left; padding: 8px;">Harga Satuan</th>
                        <th style=" border: 1px solid #dddddd; text-align: left; padding: 8px;">Total Harga</th>
                    </tr>
                </thead>
                <tbody>

                    @foreach (var data in item.BarangPenawaran)
                    {
                        <tr>
                            <td style=" border: 1px solid #dddddd; text-align: left; padding: 8px;">
                                <p>@no</p>
                            </td>
                            <td style=" border: 1px solid #dddddd; text-align: left; padding: 8px;">
                                <p>@data.Nama</p>
                            </td>
                            <td style=" border: 1px solid #dddddd; text-align: left; padding: 8px;">
                                <p>@data.Jumlah</p>
                            </td>
                            <td style=" border: 1px solid #dddddd; text-align: left; padding: 8px;">
                                <p>@data.Satuan</p>
                            </td>
                            <td style=" border: 1px solid #dddddd; text-align: left; padding: 8px;">
                                @{
                                    CultureInfo culture = new CultureInfo("id-ID");
                                    var crHarga = data.Harga.ToString("C2", culture);
                                    var CrTotal = data.Total.ToString("C2", culture);
                                }
                                <p style=" font-variant-numeric: proportional-nums">@crHarga</p>
                            </td>
                            <td style=" border: 1px solid #dddddd; text-align: left; padding: 8px;">
                                <p>@CrTotal</p>
                            </td>
                        </tr>
                        no++;
                    }
                </tbody>
                <tfoot>
                    <tr>
                        <td align="right" colspan="9">
                            @{
                                CultureInfo culture2 = new CultureInfo("id-ID");
                                var CrGrandTotal = item.GrandTotal.ToString("C2", culture2);
                            }
                            <h3 style="padding-top:25px;padding-left:500px;padding-right:25px;">Grand Total : @CrGrandTotal</h3>
                        </td>
                    </tr>
                    <tr style="padding-left:75px">
                        <td style=" border: 1px solid #dddddd; text-align: left; padding: 8px;" colspan="9">
                            <p style="padding-left: 25px">Keterangan</p>
                            <p style="padding-left: 25px">@item.Catatan</p>
                            @{
                                DateTime tanggal2 = DateTime.Now;
                                <p style="padding-left: 25px" class="text-bold font-italic">Pengiriman barang bulan @tanggal2.ToLocalTime().Month.ToString() @tanggal2.Year  </p>
                            }

                        </td>
                    </tr>
                </tfoot>
            </table>
            <div class="container">
                <div class="row">
                    <div class="col">
                    </div>
                    <div class="col-md-auto">
                        <p style="padding-left: 500px">Surabaya,  @tanggal2.ToLocalTime().ToString() </p>
                        <p style="padding-left: 500px">Hormat Kami</p>
                    </div>
                    <div class="col col-lg-2">
                    </div>
                </div>
            </div>
        </div>
    }
}


@code {
    double _grandtotal { get; set; }
    double _grandDiskon { get; set; }
    double _grandDetil { get; set; }
    private DataUser user = new DataUser();
    List<DataPenawaran> _dataPenawaran = new List<DataPenawaran>();
    List<BarangPenawaran> barangPenawarans = new List<BarangPenawaran>();
    List<DataBarang> _daftarBarang = new List<DataBarang>();
    private long _idPenawaran { get; set; }
    Random rnd = new Random();
    protected override async Task OnInitializedAsync()
    {
        user = DataService.User;
        var Token = DataService.Token;
        if (!String.IsNullOrEmpty(Token))
        {
            await GetDataBarang();
            await GetPenawaran();
        }
        else
        {
            NavigationManager.NavigateTo("/");
        }
    }

    private async Task GetDataBarang()
    {
        var dataBarang = DataService.GetDataBarangWithGroupBy();
        await foreach (var item in dataBarang)
        {
            _daftarBarang.Add(new DataBarang
            {
                IdBarang = item.IdBarang,
                IdDivisiBarang = item.IdDivisiBarang,
                IdSubDivisiBarang = item.IdSubDivisiBarang,
                IdKategoriBarang = item.IdKategoriBarang,
                IdSubKategoriBarang = item.IdSubKategoriBarang,
                IdSupplier = item.IdSupplier,
                IdJenisSupplier = item.IdJenisSupplier,
                IdSatuan = item.IdSatuan,
                Nama = item.Nama,
                Satuan = item.Satuan,
                Stok = item.Stok,
                Minimum = item.Minimum,
                Maksimum = item.Maksimum,
                NamaSupplier = item.NamaSupplier
            });
        }
        this.StateHasChanged();
    }
    async Task GetPenawaran()
    {
        var data = PenawaranService.GetDataPenawaran(user);
        await foreach (var item in data)
        {
            List<BarangPenawaran> DetailPenawaran = new List<BarangPenawaran>();
            DetailPenawaran.Clear();
            foreach (var x in item.DetailPenawaranResponse)
            {
                var Nama = "";
                var Satuan = "";
                var Catatan = "";
                if (x.IdBarang != null || x.Catatan != null)
                {
                    var barang = _daftarBarang.Where(i => i.IdBarang == Int64.Parse(x.IdBarang) && i.IdSatuan == Int64.Parse(x.IdSatuan)).FirstOrDefault();
                    Nama = barang.Nama;
                    Satuan = barang.Satuan;
                    Catatan = x.Catatan;
                }
                else
                {
                    Nama = x.BarangBarang;
                    Satuan = x.SatuanSatuan;
                }
                DetailPenawaran.Add(new BarangPenawaran
                {
                    Nama = Nama,
                    Satuan = Satuan,
                    Jumlah = x.Jumlah,
                    Total = x.Total,
                    Harga = x.Harga,
                    DiskonDetil = double.Parse(x.DiskonDetil),
                    DiskonNominal = x.DiskonNominal,
                    CatatanPenawaran = Catatan,
                });

            }
            var termin = 0;
            if (item.IdTermin != null)
            {
                termin = Int32.Parse(item.IdTermin);
            }
            _dataPenawaran.Add(new DataPenawaran
            {
                IdPenawaranPembelian = item.IdPenawaranPembelian,
                IdJenisSupplier = item.IdJenisSupplier,
                IdSupplier = item.IdSupplier,
                IdTermin = termin,
                DiskonDetil = item.DiskonDetil,
                DiskonNominal = item.DiskonNominal,
                GrandTotal = item.GrandTotal,
                BarangPenawaran = DetailPenawaran,
                Status = item.Status,
                Catatan = item.Catatan,
            });
            this.StateHasChanged();
        }
    }
    private void ShowBtnPress(long nr)
    {
        DataPenawaran tmp = _dataPenawaran.FirstOrDefault(f => f.IdPenawaranPembelian == nr);
        tmp.ShowDetails = !tmp.ShowDetails;
        _idPenawaran = nr;
    }

    private void Print(long id)
    {
        _idPenawaran = id;
        _IJSRuntime.InvokeAsync<object>("myFaktur","_blank");
    }
}
